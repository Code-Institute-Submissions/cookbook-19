{"changed":true,"filter":false,"title":"app.py","tooltip":"/app.py","value":"import os\nfrom flask import Flask, render_template, request, redirect, flash, url_for, session\nfrom flask_pymongo import PyMongo\nfrom bson.objectid import ObjectId\n\napp=Flask(__name__)\n\napp.secret_key=os.getenv(\"SECRET\",\"randomstring123\")\n\napp.config[\"MONGO_DBNAME\"]='milestone-3'\napp.config[\"MONGO_URI\"]='mongodb+srv://Shilldon:Palad1n1@myfirstcluster-gzjbi.mongodb.net/milestone-3'\n\nmongo=PyMongo(app)\n\n@app.route(\"/check_user\",methods=['POST','GET'])\ndef check_user():\n    usersdb=mongo.db.usersDB\n    \n    user=request.form.to_dict()\n    if user['username']==\"logout\":\n        session.pop('user')\n    else:    \n        session[\"user\"]=user['username']\n        #check if the user exists in the userDB - if not (by counting results = 0) create user\n        print(\"users db result \",usersdb.find({\"name\" : user['username']}).count())\n        if usersdb.find({\"name\" : user['username']}).count()==0: \n            usersdb.insert({'name':user['username'],'favourites':[], 'liked':[]})  \n        \n    return redirect(url_for('index'))\n\n@app.route(\"/\")\ndef index():\n    session[\"filters\"]={}\n    return render_template(\"index.html\",title_text='Perfect dishes on demand')\n\n@app.route(\"/add_recipe\")\ndef add_recipe():\n    #get list of ingredients to display in auto complete form for ingredients in add_recipe.html\n    ingredientsdb=mongo.db.ingredientsDB\n    ingredients=ingredientsdb.find()\n    _ingredients={}\n    for ingredient in ingredients:\n        new_ingredient={ingredient[\"name\"].capitalize():None}\n        _ingredients.update(new_ingredient)\n        \n    #get list of authors to display in auto complete form for authors in add_recipe.html\n    authordb=mongo.db.authorDB\n    authors=authordb.find()\n    _authors={}\n    for author in authors:\n        new_author={author[\"name\"]:None}\n        _authors.update(new_author)\n\n    #get list of countries to display in auto complete form for countries in add_recipe.html\n    countrydb=mongo.db.countriesDB\n    countries=countrydb.find()\n    _countries={}\n    for country in countries:\n        new_country={country[\"name\"]:None}\n        _countries.update(new_country)\n\n    return render_template(\"add_recipe.html\", title_text='Add recipe',ingredients_list=_ingredients, author_list=_authors, country_list=_countries)\n\n@app.route(\"/insertrecipe/\", methods=['POST'])\ndef insertrecipe():\n    #check whether the user is adding a new recipe or editting a recipe\n    edit=request.args.get('edit',None)\n        \n    recipes=mongo.db.recipeDB\n    usersdb=mongo.db.usersDB\n    \n    #if editing a recipe get the ID of the recipe to edit\n    if edit=='True':\n        recipe_id=ObjectId(request.args.get('recipe_id'))\n    else:\n        recipe_id=recipes.insert({'name':'new','favourite':[]})\n    \n    #request form data not in flat format - arrays are created in the form for ingredients and allergen information\n    new_recipe=request.form.to_dict(flat=False)\n    print(\"new_recipe unflattened\",new_recipe)\n    ingredients=[]\n    ingredient={}\n    #initialise cook time variable to convert hours and minutes to minutes total for ease of search DB in recipe_list\n    cook_time=0\n    for key, key_name in new_recipe.items():\n        #flatten dict for non-array items which have become arrays through request object\n        if key!='type' and key!='amount' and key!='unit' and key!='allergens':\n            new_recipe[key]=new_recipe[key][0]\n            if key=='favourite':\n                #get the list of users for whom this is a favourite recipe\n                recipe_doc=recipes.find_one({\"_id\" : ObjectId(recipe_id)})\n                favourites=recipe_doc[\"favourite\"]                   \n                #check whether a user is logged on and if this user has marked this recipe as a favourite\n                if \"user\" in session:\n                    user_doc=usersdb.find_one({\"name\":session[\"user\"]})\n                    if new_recipe[key].lower() =='true':\n                        #if they have and their ID is not marked in this recipe as being one of their favorites\n                        #add the user id to the list of users in the recipe favourites array\n                        if recipe_id not in user_doc[\"favourites\"]:\n                            usersdb.update({\"name\": session[\"user\"]},{\"$push\":{\"favourites\" : recipe_id}})\n                            favourites.append(str(user_doc[\"_id\"]))\n                    else:\n                        #if they not marked it as a favourite and their ID is in the list of users\n                        #remove the user id to the list of users in the recipe favourites array                    \n                        if recipe_id in user_doc[\"favourites\"]:\n                            usersdb.update({\"name\": session[\"user\"]},{\"$pull\":{\"favourites\" : recipe_id}}) \n                            favourites.remove(str(user_doc[\"_id\"]))\n                new_recipe[key]=favourites    \n            if key=='hours' or key=='minutes' or key=='calories':\n                #convert from string to int, if needed\n                try:\n                    new_recipe[key]=int(new_recipe[key])\n                except ValueError:\n                    new_recipe[key]=0\n            if key=='hours':\n                #convert hours to minutes and add to cook time\n                cook_time=new_recipe[key]*60\n            if key=='minutes':\n                cook_time=cook_time+new_recipe[key]\n        elif key=='type':\n            #cycle through the ingredient information and create objects for each ingredient with key values of ingredient type, amount and units\n            i=0\n            \n            for ingredient_type in key_name:\n                ingredient={ 'type' : ingredient_type.lower() , 'amount' : new_recipe['amount'][i] , 'unit' : new_recipe['unit'][i] }\n                #insert ingredient object into array of ingredients\n                ingredients.append(ingredient)\n                i+=1       \n                \n    #insert the new cook_time key into the new_recipe dict\n    new_recipe[\"cook_time\"]=cook_time\n    #insert the new ingredients array into the new_receipe dict\n    new_recipe['ingredients']=ingredients  \n    print(\"new_recipe[ingredients]\",new_recipe['ingredients'])\n\n    current_recipe=recipes.find_one({\"_id\" : ObjectId(recipe_id)})\n    new_ingredients=ingredients\n    print(\"new ingredients \",new_ingredients)\n    ingredientsdb=mongo.db.ingredientsDB\n\n    for ingredient in new_ingredients:\n        ingredient_type=ingredient\n        if edit==\"True\":\n            current_ingredients=current_recipe[\"ingredients\"]\n            if ingredient in current_ingredients:\n                ingredient_index=current_ingredients.index(ingredient)\n                current_ingredients.remove(ingredient)\n        #find the ingredient document in the ingredients database        \n        new_ingredient_doc=ingredientsdb.find_one({\"name\" : ingredient[\"type\"].lower()})\n        \n        if new_ingredient_doc!=None:\n            new_ingredient_id=new_ingredient_doc[\"_id\"]\n        else:\n            #if the ingredient is new and has no document create a new ID\n            print(\"on adding ingredient[type] is \",ingredient[\"type\"].lower())\n            new_ingredient_id=ingredientsdb.insert({\"name\" : ingredient[\"type\"].lower(), \"recipe\":[]})\n            new_ingredient_doc=ingredientsdb.find_one({\"_id\" : new_ingredient_id})\n        if recipe_id not in new_ingredient_doc[\"recipe\"]:\n            ingredientsdb.update({\"_id\": new_ingredient_id},{\"$push\":{\"recipe\" : recipe_id}})\n\n    if edit==\"True\":\n        for ingredient in current_ingredients:\n            if ingredient not in new_ingredients:\n                current_ingredient_doc=ingredientsdb.find_one({\"name\" : ingredient[\"type\"].lower()})  \n                current_ingredient_id=current_ingredient_doc[\"_id\"]\n                ingredientsdb.update({\"_id\": current_ingredient_id},{\"$pull\":{\"recipe\" : recipe_id}})\n                current_ingredient_doc=ingredientsdb.find_one({\"_id\": current_ingredient_id})\n                if len(current_ingredient_doc[\"recipe\"])==0:\n                    ingredientsdb.remove({\"_id\": current_ingredient_id})  \n    \n    categories=[\"allergens\",\"meal\",\"country\",\"author\",\"difficulty\"]\n    for category in categories:\n        if category in new_recipe:\n            if type(new_recipe[category]) is list:\n                new_category=new_recipe[category]\n            else:    \n                new_category=[]\n                new_category.append(new_recipe[category])\n        else:\n            new_category=[]\n        \n        if category==\"allergens\":    \n            categorydb=mongo.db.allergensDB\n        elif category==\"meal\":\n            categorydb=mongo.db.mealDB\n        elif category==\"country\":\n            categorydb=mongo.db.countriesDB\n        elif category==\"author\":\n            categorydb=mongo.db.authorDB            \n        elif category==\"difficulty\":\n            categorydb=mongo.db.difficultyDB   \n\n        for value in new_category:\n            #check if we are editting an existing recipe, if so check whether any values existing in both the updated and current recipes \n            #if so remove them from the list to later delete the recipe ID from the values that remain in the list\n            if edit==\"True\":\n                if category in current_recipe:\n                    if type(new_recipe[category]) is list:\n                        current_category=current_recipe[category]\n                    else:    \n                        current_category=[]\n                        current_category.append(new_recipe[category])                    \n                    if value in current_category:\n                        category_index=current_category.index(value)\n                        current_category.remove(value)\n        \n            #get the name of the new value in this category        \n            new_category_doc=categorydb.find_one({\"name\" : value.lower()}) \n            if new_category_doc!=None:\n                #if the particular object exists then get the associated doc\n                new_category_id=new_category_doc[\"_id\"]\n            else:\n                #if it doesn't exist createa a new doc with the name and the ID of this recipe\n                new_category_id=categorydb.insert({\"name\" : value.lower(), \"recipe\":[]})\n                new_category_doc=categorydb.find_one({\"_id\" : new_category_id})\n            if recipe_id not in new_category_doc[\"recipe\"]:\n                #check if the recipe is already in the new doc, if it isn't add the recipe ID to this particular category in the DB\n                categorydb.update({\"_id\" : new_category_id},{\"$push\":{\"recipe\":recipe_id}})\n\n        if edit==\"True\":\n            #if we are editing a recipe check whether there are any remaining values in the category list\n            if category in current_recipe:\n                #if so, then for all the values remove the recipe ID from the particular category in the DB\n                for value in current_category:\n                    if value not in new_category:\n                        current_category_doc=categorydb.find_one({\"name\" : value})\n                        current_category_id=current_category_doc[\"_id\"]\n                        categorydb.update({\"_id\" : current_category_id},{\"$pull\" : {\"recipe\" : recipe_id}})\n                        current_category_doc=categorydb.find_one({\"_id\" : current_category_id})\n                        #if this particular category is empty, delete it from the DB\n                        if len(current_category_doc[\"recipe\"])==0:\n                            categorydb.remove({\"_id\" : current_category_id})\n\n\n                    \n    #need to remove the favourite, type, amount and unit arrays from the dict having imported them into ingredients objects and favourite array\n    #done by error testing because ingredients/favourite may not have been added via the form\n    try:\n        del new_recipe['type']\n    except KeyError:\n        pass\n    try:\n        del new_recipe['amount']\n    except KeyError:\n        pass    \n    try:\n        del new_recipe['unit']\n    except KeyError:\n        pass          \n\n    \n    #if edit=='True':\n        #recipes.update({'_id':ObjectId(recipe_id)},new_recipe)\n    #else:\n    recipes.update({'_id':ObjectId(recipe_id)},new_recipe)\n        \n    return redirect(url_for('show_recipe',recipe_id=recipe_id,added_recipe=\"true\"))\n\n@app.route(\"/search\")\ndef search():\n    \n    categories=[\"ingredients\",\"allergens\",\"difficulty\",\"meal\",\"country\",\"author\"]\n    _category_lists={}\n    \n    for category in categories:\n        item_list=[]\n        if category==\"ingredients\":\n            database=mongo.db.ingredientsDB.find().sort(\"name\")\n        elif category==\"allergens\":\n            database=mongo.db.allergensDB.find().sort(\"name\")\n        elif category==\"meal\":\n            database=mongo.db.mealDB.find().sort(\"name\")\n        elif category==\"country\":\n            database=mongo.db.countriesDB.find().sort(\"name\")\n\n        for item in database:\n            item_list.append(item[\"name\"].capitalize())   \n        \n        _category_lists[category]=item_list  \n    print(\"country list\",_category_lists[\"allergens\"])\n    return render_template(\"search.html\",title_text=\"Find your favourites\",category_list=_category_lists)\n\n@app.route(\"/recipe_list\", methods=['POST','GET'])\ndef recipe_list():\n    if session.get('sort')==True:\n        _sort=session[\"sort\"]\n    else:\n        _sort='none'\n    _filter_dict=session[\"filters\"]\n    if _filter_dict==None:\n        _filter_dict={}\n        \n    allergen_list=[]\n    #get the action request from the page to determine what sort of list is to be displayed and display appropriate title text \n    _todo=request.args.get('action',None)\n    if _todo==\"delete\":\n        title_text_value=\"Delete recipes\"\n    elif _todo==\"edit\":\n        title_text_value=\"Edit recipes\"\n    else:\n        title_text_value=\"Your recipes\"\n\n    #check if the results are to be filtered/sorted using variable passed from recipe_list\n    filter=request.args.get('filter',None)\n\n    #create a list of countries and authors referred to in recipe db to generate filters in recipe_list\n    list_of_countries=mongo.db.countriesDB.find()\n    list_of_authors=mongo.db.authorDB.find()\n\n    #define filter author and country for passing to filter list in recipe_list.html.\n    #Will check for \"\" value and if so, not display author/country filter\n    filter_country=\"\"\n    filter_author=\"\"\n\n    if filter=='true':    \n        _currentsort=request.form.get('sort_by')\n        print(\"_sort=\",_sort)\n        if _currentsort!=None:\n            _sort=_currentsort\n            session[\"sort\"]=_sort\n        else:\n            filter_favourites=request.form.get('favourite')\n            if filter_favourites=='true':\n                user_doc=mongo.db.usersDB.find_one({\"name\":session[\"user\"]})\n                user_id=str(user_doc[\"_id\"])\n                _filter_dict.update({\"favourite\" : { \"$in\" : [user_id]}})\n            else:\n                _filter_dict.pop(\"favourite\",None)            \n                    \n            filter_meal=request.form.get('meal')\n            print(\"filter meal \",filter_meal)\n            if filter_meal!=\"\" and filter_meal!=None:\n                _filter_dict.update({\"meal\":filter_meal})\n            else:\n                _filter_dict.pop(\"meal\",None)\n            \n            filter_allergens=request.form.getlist('allergens')\n            if filter_allergens:\n                loop=0\n                for allergen in filter_allergens:\n                    allergen_list.append(allergen)\n                filter_allergens={  '$nin' : allergen_list }   \n                _filter_dict.update({\"allergens\" : filter_allergens}) \n            else:\n                _filter_dict.pop(\"allergens\",None)\n                \n            filter_calories=request.form.get('calories')\n            if filter_calories!=\"\" and filter_calories!=None:\n                if filter_calories==999:\n                    filter_calories={'$gt':filter_calories}\n                else:\n                    filter_calories={'$lt':filter_calories}  \n                _filter_dict.update({\"calories\":filter_calories})\n            else:\n                _filter_dict.pop(\"calories\",None)\n                \n            filter_cooktime=request.form.get('cook_time')\n            if filter_cooktime!=\"\" and filter_cooktime!=None:\n                if filter_cooktime==179:\n                    filter_cooktime={'$gt':filter_cooktime}\n                else:\n                    filter_cooktime={'$lt':filter_cooktime}  \n                _filter_dict.update({\"cook_time\" : filter_cooktime})\n            else:\n                _filter_dict.pop(\"cook_time\",None)\n            filter_country=request.form.get('country')\n            if filter_country!=\"\" and filter_country!=None:\n                _filter_dict.update({\"country\" : filter_country })\n            else:\n                _filter_dict.pop(\"country\",None)\n            \n            filter_author=request.form.get('author')\n            if filter_author!=\"\" and filter_author!=None:\n                _filter_dict.update({\"author\" : filter_author})\n            else:\n                _filter_dict.pop(\"author\",None)\n                \n            session[\"filters\"]=_filter_dict\n    print(\"_sort\",_sort)\n    if filter=='true':\n    #do the appropriate search and sort against the mongoDB depending on input from form/session variable\n\n        if _sort!=None and _sort!=\"none\":\n            _recipe_list=mongo.db.recipeDB.find(_filter_dict).sort(_sort,1) \n        else:\n            _recipe_list=mongo.db.recipeDB.find(_filter_dict)\n    else:\n        if _sort!=\"none\" and _sort!=None:\n            _recipe_list=mongo.db.recipeDB.find().sort(_sort,1) \n        else:      \n            _recipe_list=mongo.db.recipeDB.find()\n\n    #remove duplicates from the lists\n    _author_list=[]\n    for author in list_of_authors:\n        _author_list.append(author[\"name\"])\n            \n    _country_list=[]\n    for country in list_of_countries:\n        _country_list.append(country[\"name\"])    \n    \n    _total_results=_recipe_list.count()\n    return render_template(\"recipe_list.html\",title_text=title_text_value,recipes=_recipe_list,selected_country=filter_country, selected_author=filter_author,countries=_country_list,authors=_author_list,action=_todo,filters=_filter_dict, allergens=allergen_list, sort=_sort, total_results=_total_results)\n\n@app.route('/show_recipe/<recipe_id>')\ndef show_recipe(recipe_id):\n    _recipe=mongo.db.recipeDB.find_one({\"_id\":ObjectId(recipe_id)})\n    _added=request.args.get('added_recipe',None)\n    #check if the user is logged on, if not pass false value for favourite so no star is shown on display_recipe.html\n    if \"user\" in session:\n        user_doc=mongo.db.usersDB.find_one({\"name\" : session[\"user\"]})\n        #check if this recipe is stored in this user's favourite list. If so mark pass value to mark with a star on display_recipe.html\n        if ObjectId(recipe_id) in user_doc[\"favourites\"]:\n            _recipe[\"favourite\"]=True\n        else:\n            _recipe[\"favourite\"]=False    \n    else:\n        _recipe[\"favourite\"]=False               \n    title_text='Your recipe'\n    return render_template('display_recipe.html',title_text='Your recipe',recipe=_recipe,added=_added)\n\n@app.route('/edit_recipe/<recipe_id>')\ndef edit_recipe(recipe_id):\n    _recipe=mongo.db.recipeDB.find_one({\"_id\":ObjectId(recipe_id)})\n    #get list of ingredients to display in auto complete form for ingredients in add_recipe.html\n    ingredientsdb=mongo.db.ingredientsDB\n    ingredients=ingredientsdb.find()\n    _ingredients={}\n    for ingredient in ingredients:\n        new_ingredient={ingredient[\"name\"]:None}\n        _ingredients.update(new_ingredient)\n        \n    #get list of authors to display in auto complete form for authors in add_recipe.html\n    authordb=mongo.db.authorDB\n    authors=authordb.find()\n    _authors={}\n    for author in authors:\n        new_author={author[\"name\"]:None}\n        _authors.update(new_author)\n\n    #get list of countries to display in auto complete form for countries in add_recipe.html\n    countrydb=mongo.db.countriesDB\n    countries=countrydb.find()\n    _countries={}\n    for country in countries:\n        new_country={country[\"name\"]:None}\n        _countries.update(new_country)\n        \n    return render_template('edit_recipe.html',title_text=\"Edit your recipes\",recipe=_recipe,ingredients_list=_ingredients, author_list=_authors, country_list=_countries)\n\n@app.route('/delete_recipe',methods=['POST'])\ndef delete_recipe():\n    recipe_id=request.form.get('recipe_id')\n    recipe=mongo.db.recipeDB.find_one({\"_id\":ObjectId(recipe_id)})\n    for key in recipe:\n        print(\"recipe key \",key)\n        if key=='favourite':\n            for value in recipe[key]:\n                mongo.db.usersDB.update({\"_id\" : ObjectId(value)},{\"$pull\" : {\"favourites\" : ObjectId(recipe_id)}})\n        if key==\"meal\":\n            mongo.db.mealDB.update({\"name\" : recipe[key].lower()},{\"$pull\" : {\"recipe\" : ObjectId(recipe_id)}})\n        if key==\"difficulty\":\n            mongo.db.difficultyDB.update({\"name\" : recipe[key].lower()},{\"$pull\" : {\"recipe\" : ObjectId(recipe_id)}})\n        if key==\"allergens\":\n            for value in recipe[key]:\n                mongo.db.allergensDB.update({\"name\" : value},{\"$pull\" : {\"recipe\" : ObjectId(recipe_id)}})\n        if key==\"country\":\n            mongo.db.countriesDB.update({\"name\" : recipe[key].lower()},{\"$pull\" : {\"recipe\" : ObjectId(recipe_id)}})\n            #check if there are any recipes stored against this country. If not delete the country from the collection \n            check_and_delete_empty_doc(recipe[key].lower(),mongo.db.countriesDB) \n            #if len(country_doc[\"recipe\"])==0:\n            #    mongo.db.countriesDB.remove({\"name\" : recipe[key].lower()})            \n        if key==\"author\":\n            mongo.db.authorDB.update({\"name\" : recipe[key].lower()},{\"$pull\" : {\"recipe\" : ObjectId(recipe_id)}})\n            author_doc=mongo.db.authorDB.find_one({\"name\" : recipe[key].lower()})\n            #check if there are any recipes stored against this author. If not delete the author from the collection\n            check_and_delete_empty_doc(recipe[key].lower(),mongo.db.authorDB)            \n            #if len(author_doc[\"recipe\"])==0:\n            #    mongo.db.authorDB.remove({\"name\" : recipe[key].lower()})\n        if key==\"ingredients\":\n            for value in recipe[key]:\n                for ingredient in value[\"type\"]:\n                    mongo.db.ingredientsDB.update({\"name\" : ingredient},{\"$pull\" : {\"recipe\" : ObjectId(recipe_id)}})\n                    #check if there are any recipes stored against this ingredient. If not delete the ingredient from the collection\n                    check_and_delete_empty_doc(ingredient,mongo.db.ingredientsDB)\n                    #ingredient_doc=mongo.db.ingredientsDB.find_one({\"name\" : ingredient})\n                    #if len(ingredient_doc[\"recipe\"])==0:\n                    #    mongo.db.ingredientsDB.remove({\"name\" : ingredient})                      \n        \n    mongo.db.recipeDB.remove({\"_id\":ObjectId(recipe_id)})\n    return redirect(url_for('.recipe_list',action='delete'))\n\ndef check_and_delete_empty_doc(item,database):\n    document=database.find_one({\"name\" : item})\n    if len(document[\"recipe\"])==0:\n        database.remove({\"name\" : item})                      \n    \n@app.route('/filter_recipes', methods=['POST'])\ndef filter_recipes():\n    session[\"filters\"]=request.form.to_dict()\n    calories=request.form[\"calories\"]\n    if calories:\n        session[\"filters\"][\"calories\"]=calories\n    return redirect('recipe_list')\n\n@app.route('/display_categories', methods=['POST'])\ndef display_categories():\n    selected_categories=request.form.to_dict(flat=False)\n    category=list(selected_categories.keys())[0]    \n    _item_list=[]\n    for key in selected_categories:\n        for item in selected_categories[key]:\n            if category!=\"country\" and category!=\"author\":\n                _item_list.append(item.lower())\n            else:\n                _item_list.append(item)    \n    #category=list(selected_categories.keys())[0]\n    \n    i=0\n    recipes_in_category={}\n    search_value=\"$in\"\n    if category==\"allergens\":\n        database=mongo.db.allergensDB\n        search_value=\"$nin\"\n    elif category==\"meal\":\n        database=mongo.db.mealDB\n    elif category==\"ingredients\":\n        database=mongo.db.ingredientsDB\n    elif category==\"country\":\n        database=mongo.db.countriesDB        \n    elif category==\"author\":\n        database=mongo.db.authorDB   \n    elif category==\"difficulty\":\n        database=mongo.db.difficultyDB    \n        \n    for i in range(0,len(_item_list)):\n        recipe_objects=database.find({\"name\" : {'$eq' : _item_list[i]}})\n        recipe_ids=[]\n        for recipe in recipe_objects:\n            for id in recipe[\"recipe\"]:\n                recipe_ids.append(ObjectId(id))\n        recipes_in_category[_item_list[i]]={\"recipe\":list(mongo.db.recipeDB.find({'_id' : {search_value : recipe_ids}})) }           \n        recipes_in_category[_item_list[i]].update({\"count\":len(recipe_ids)})\n        print(\"count=\",recipes_in_category[_item_list[i]])\n    \n    return render_template('display_category.html',category=category,items=_item_list,recipes=recipes_in_category, title_text=\"Your recipes\")\n    \nif __name__ ==\"__main__\":\n    app.run(host=os.environ.get(\"IP\"), port=int(os.environ.get(\"PORT\")), debug=True)    \n    ","undoManager":{"mark":99,"position":100,"stack":[[{"start":{"row":492,"column":4},"end":{"row":492,"column":5},"action":"insert","lines":["c"],"id":16074},{"start":{"row":492,"column":5},"end":{"row":492,"column":6},"action":"insert","lines":["h"]},{"start":{"row":492,"column":6},"end":{"row":492,"column":7},"action":"insert","lines":["e"]},{"start":{"row":492,"column":7},"end":{"row":492,"column":8},"action":"insert","lines":["c"]},{"start":{"row":492,"column":8},"end":{"row":492,"column":9},"action":"insert","lines":["k"]}],[{"start":{"row":492,"column":8},"end":{"row":492,"column":9},"action":"remove","lines":["k"],"id":16075},{"start":{"row":492,"column":7},"end":{"row":492,"column":8},"action":"remove","lines":["c"]},{"start":{"row":492,"column":6},"end":{"row":492,"column":7},"action":"remove","lines":["e"]},{"start":{"row":492,"column":5},"end":{"row":492,"column":6},"action":"remove","lines":["h"]},{"start":{"row":492,"column":4},"end":{"row":492,"column":5},"action":"remove","lines":["c"]}],[{"start":{"row":492,"column":4},"end":{"row":492,"column":5},"action":"insert","lines":["d"],"id":16076},{"start":{"row":492,"column":5},"end":{"row":492,"column":6},"action":"insert","lines":["e"]},{"start":{"row":492,"column":6},"end":{"row":492,"column":7},"action":"insert","lines":["l"]},{"start":{"row":492,"column":7},"end":{"row":492,"column":8},"action":"insert","lines":["e"]},{"start":{"row":492,"column":8},"end":{"row":492,"column":9},"action":"insert","lines":["t"]},{"start":{"row":492,"column":9},"end":{"row":492,"column":10},"action":"insert","lines":["e"]},{"start":{"row":492,"column":10},"end":{"row":492,"column":11},"action":"insert","lines":["_"]}],[{"start":{"row":492,"column":4},"end":{"row":492,"column":11},"action":"remove","lines":["delete_"],"id":16077}],[{"start":{"row":492,"column":4},"end":{"row":492,"column":5},"action":"insert","lines":["c"],"id":16078},{"start":{"row":492,"column":5},"end":{"row":492,"column":6},"action":"insert","lines":["h"]},{"start":{"row":492,"column":6},"end":{"row":492,"column":7},"action":"insert","lines":["e"]},{"start":{"row":492,"column":7},"end":{"row":492,"column":8},"action":"insert","lines":["c"]},{"start":{"row":492,"column":8},"end":{"row":492,"column":9},"action":"insert","lines":["k"]},{"start":{"row":492,"column":9},"end":{"row":492,"column":10},"action":"insert","lines":["_"]},{"start":{"row":492,"column":10},"end":{"row":492,"column":11},"action":"insert","lines":["a"]},{"start":{"row":492,"column":11},"end":{"row":492,"column":12},"action":"insert","lines":["n"]},{"start":{"row":492,"column":12},"end":{"row":492,"column":13},"action":"insert","lines":["d"]},{"start":{"row":492,"column":13},"end":{"row":492,"column":14},"action":"insert","lines":["_"]},{"start":{"row":492,"column":14},"end":{"row":492,"column":15},"action":"insert","lines":["d"]}],[{"start":{"row":492,"column":15},"end":{"row":492,"column":16},"action":"insert","lines":["e"],"id":16079},{"start":{"row":492,"column":16},"end":{"row":492,"column":17},"action":"insert","lines":["l"]},{"start":{"row":492,"column":17},"end":{"row":492,"column":18},"action":"insert","lines":["e"]},{"start":{"row":492,"column":18},"end":{"row":492,"column":19},"action":"insert","lines":["t"]},{"start":{"row":492,"column":19},"end":{"row":492,"column":20},"action":"insert","lines":["e"]},{"start":{"row":492,"column":20},"end":{"row":492,"column":21},"action":"insert","lines":["_"]},{"start":{"row":492,"column":21},"end":{"row":492,"column":22},"action":"insert","lines":["e"]},{"start":{"row":492,"column":22},"end":{"row":492,"column":23},"action":"insert","lines":["m"]},{"start":{"row":492,"column":23},"end":{"row":492,"column":24},"action":"insert","lines":["p"]},{"start":{"row":492,"column":24},"end":{"row":492,"column":25},"action":"insert","lines":["t"]},{"start":{"row":492,"column":25},"end":{"row":492,"column":26},"action":"insert","lines":["y"]}],[{"start":{"row":492,"column":26},"end":{"row":492,"column":27},"action":"insert","lines":["_"],"id":16080},{"start":{"row":492,"column":27},"end":{"row":492,"column":28},"action":"insert","lines":["d"]},{"start":{"row":492,"column":28},"end":{"row":492,"column":29},"action":"insert","lines":["o"]},{"start":{"row":492,"column":29},"end":{"row":492,"column":30},"action":"insert","lines":["c"]}],[{"start":{"row":492,"column":30},"end":{"row":492,"column":32},"action":"insert","lines":["()"],"id":16081}],[{"start":{"row":492,"column":31},"end":{"row":492,"column":32},"action":"insert","lines":["n"],"id":16082},{"start":{"row":492,"column":32},"end":{"row":492,"column":33},"action":"insert","lines":["a"]},{"start":{"row":492,"column":33},"end":{"row":492,"column":34},"action":"insert","lines":["m"]},{"start":{"row":492,"column":34},"end":{"row":492,"column":35},"action":"insert","lines":["e"]},{"start":{"row":492,"column":35},"end":{"row":492,"column":36},"action":"insert","lines":[","]},{"start":{"row":492,"column":36},"end":{"row":492,"column":37},"action":"insert","lines":["c"]},{"start":{"row":492,"column":37},"end":{"row":492,"column":38},"action":"insert","lines":["a"]},{"start":{"row":492,"column":38},"end":{"row":492,"column":39},"action":"insert","lines":["t"]},{"start":{"row":492,"column":39},"end":{"row":492,"column":40},"action":"insert","lines":["e"]},{"start":{"row":492,"column":40},"end":{"row":492,"column":41},"action":"insert","lines":["g"]}],[{"start":{"row":492,"column":41},"end":{"row":492,"column":42},"action":"insert","lines":["o"],"id":16083},{"start":{"row":492,"column":42},"end":{"row":492,"column":43},"action":"insert","lines":["r"]},{"start":{"row":492,"column":43},"end":{"row":492,"column":44},"action":"insert","lines":["y"]}],[{"start":{"row":492,"column":45},"end":{"row":492,"column":46},"action":"insert","lines":[":"],"id":16084}],[{"start":{"row":492,"column":46},"end":{"row":493,"column":0},"action":"insert","lines":["",""],"id":16085},{"start":{"row":493,"column":0},"end":{"row":493,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":493,"column":0},"end":{"row":496,"column":8},"action":"insert","lines":["                    ingredient_doc=mongo.db.ingredientsDB.find_one({\"name\" : ingredient})","                    if len(ingredient_doc[\"recipe\"])==0:","                        mongo.db.ingredientsDB.remove({\"name\" : ingredient})                      ","        "],"id":16086}],[{"start":{"row":493,"column":0},"end":{"row":493,"column":4},"action":"remove","lines":["    "],"id":16087},{"start":{"row":493,"column":0},"end":{"row":493,"column":4},"action":"remove","lines":["    "]},{"start":{"row":493,"column":0},"end":{"row":493,"column":4},"action":"remove","lines":["    "]},{"start":{"row":493,"column":0},"end":{"row":493,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":494,"column":0},"end":{"row":494,"column":4},"action":"remove","lines":["    "],"id":16088},{"start":{"row":494,"column":0},"end":{"row":494,"column":4},"action":"remove","lines":["    "]},{"start":{"row":494,"column":0},"end":{"row":494,"column":4},"action":"remove","lines":["    "]},{"start":{"row":494,"column":0},"end":{"row":494,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":495,"column":0},"end":{"row":495,"column":4},"action":"remove","lines":["    "],"id":16089},{"start":{"row":495,"column":0},"end":{"row":495,"column":4},"action":"remove","lines":["    "]},{"start":{"row":495,"column":0},"end":{"row":495,"column":4},"action":"remove","lines":["    "]},{"start":{"row":495,"column":0},"end":{"row":495,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":492,"column":44},"end":{"row":492,"column":45},"action":"insert","lines":[","],"id":16090},{"start":{"row":492,"column":45},"end":{"row":492,"column":46},"action":"insert","lines":["d"]},{"start":{"row":492,"column":46},"end":{"row":492,"column":47},"action":"insert","lines":["a"]},{"start":{"row":492,"column":47},"end":{"row":492,"column":48},"action":"insert","lines":["t"]},{"start":{"row":492,"column":48},"end":{"row":492,"column":49},"action":"insert","lines":["a"]},{"start":{"row":492,"column":49},"end":{"row":492,"column":50},"action":"insert","lines":["b"]},{"start":{"row":492,"column":50},"end":{"row":492,"column":51},"action":"insert","lines":["a"]},{"start":{"row":492,"column":51},"end":{"row":492,"column":52},"action":"insert","lines":["s"]},{"start":{"row":492,"column":52},"end":{"row":492,"column":53},"action":"insert","lines":["e"]}],[{"start":{"row":493,"column":4},"end":{"row":493,"column":18},"action":"remove","lines":["ingredient_doc"],"id":16091},{"start":{"row":493,"column":4},"end":{"row":493,"column":5},"action":"insert","lines":["d"]},{"start":{"row":493,"column":5},"end":{"row":493,"column":6},"action":"insert","lines":["o"]},{"start":{"row":493,"column":6},"end":{"row":493,"column":7},"action":"insert","lines":["c"]},{"start":{"row":493,"column":7},"end":{"row":493,"column":8},"action":"insert","lines":["u"]},{"start":{"row":493,"column":8},"end":{"row":493,"column":9},"action":"insert","lines":["m"]},{"start":{"row":493,"column":9},"end":{"row":493,"column":10},"action":"insert","lines":["e"]},{"start":{"row":493,"column":10},"end":{"row":493,"column":11},"action":"insert","lines":["n"]},{"start":{"row":493,"column":11},"end":{"row":493,"column":12},"action":"insert","lines":["t"]}],[{"start":{"row":484,"column":132},"end":{"row":485,"column":0},"action":"insert","lines":["",""],"id":16092},{"start":{"row":485,"column":0},"end":{"row":485,"column":20},"action":"insert","lines":["                    "]},{"start":{"row":485,"column":20},"end":{"row":485,"column":21},"action":"insert","lines":["c"]},{"start":{"row":485,"column":21},"end":{"row":485,"column":22},"action":"insert","lines":["h"]},{"start":{"row":485,"column":22},"end":{"row":485,"column":23},"action":"insert","lines":["e"]},{"start":{"row":485,"column":23},"end":{"row":485,"column":24},"action":"insert","lines":["c"]},{"start":{"row":485,"column":24},"end":{"row":485,"column":25},"action":"insert","lines":["k"]},{"start":{"row":485,"column":25},"end":{"row":485,"column":26},"action":"insert","lines":["_"]}],[{"start":{"row":485,"column":26},"end":{"row":485,"column":27},"action":"insert","lines":["a"],"id":16093},{"start":{"row":485,"column":27},"end":{"row":485,"column":28},"action":"insert","lines":["n"]},{"start":{"row":485,"column":28},"end":{"row":485,"column":29},"action":"insert","lines":["d"]},{"start":{"row":485,"column":29},"end":{"row":485,"column":30},"action":"insert","lines":["_"]},{"start":{"row":485,"column":30},"end":{"row":485,"column":31},"action":"insert","lines":["d"]},{"start":{"row":485,"column":31},"end":{"row":485,"column":32},"action":"insert","lines":["e"]},{"start":{"row":485,"column":32},"end":{"row":485,"column":33},"action":"insert","lines":["l"]},{"start":{"row":485,"column":33},"end":{"row":485,"column":34},"action":"insert","lines":["e"]},{"start":{"row":485,"column":34},"end":{"row":485,"column":35},"action":"insert","lines":["t"]},{"start":{"row":485,"column":35},"end":{"row":485,"column":36},"action":"insert","lines":["e"]},{"start":{"row":485,"column":36},"end":{"row":485,"column":37},"action":"insert","lines":["_"]},{"start":{"row":485,"column":37},"end":{"row":485,"column":38},"action":"insert","lines":["e"]},{"start":{"row":485,"column":38},"end":{"row":485,"column":39},"action":"insert","lines":["m"]},{"start":{"row":485,"column":39},"end":{"row":485,"column":40},"action":"insert","lines":["p"]},{"start":{"row":485,"column":40},"end":{"row":485,"column":41},"action":"insert","lines":["t"]}],[{"start":{"row":485,"column":41},"end":{"row":485,"column":42},"action":"insert","lines":["y"],"id":16094},{"start":{"row":485,"column":42},"end":{"row":485,"column":43},"action":"insert","lines":["_"]},{"start":{"row":485,"column":43},"end":{"row":485,"column":44},"action":"insert","lines":["d"]},{"start":{"row":485,"column":44},"end":{"row":485,"column":45},"action":"insert","lines":["o"]},{"start":{"row":485,"column":45},"end":{"row":485,"column":46},"action":"insert","lines":["c"]}],[{"start":{"row":485,"column":46},"end":{"row":485,"column":48},"action":"insert","lines":["()"],"id":16095}],[{"start":{"row":485,"column":47},"end":{"row":485,"column":48},"action":"insert","lines":["i"],"id":16096},{"start":{"row":485,"column":48},"end":{"row":485,"column":49},"action":"insert","lines":["t"]},{"start":{"row":485,"column":49},"end":{"row":485,"column":50},"action":"insert","lines":["e"]},{"start":{"row":485,"column":50},"end":{"row":485,"column":51},"action":"insert","lines":["m"]}],[{"start":{"row":485,"column":50},"end":{"row":485,"column":51},"action":"remove","lines":["m"],"id":16097},{"start":{"row":485,"column":49},"end":{"row":485,"column":50},"action":"remove","lines":["e"]},{"start":{"row":485,"column":48},"end":{"row":485,"column":49},"action":"remove","lines":["t"]},{"start":{"row":485,"column":47},"end":{"row":485,"column":48},"action":"remove","lines":["i"]}],[{"start":{"row":485,"column":47},"end":{"row":485,"column":48},"action":"insert","lines":["i"],"id":16098},{"start":{"row":485,"column":48},"end":{"row":485,"column":49},"action":"insert","lines":["n"]},{"start":{"row":485,"column":49},"end":{"row":485,"column":50},"action":"insert","lines":["g"]},{"start":{"row":485,"column":50},"end":{"row":485,"column":51},"action":"insert","lines":["e"]},{"start":{"row":485,"column":51},"end":{"row":485,"column":52},"action":"insert","lines":["r"]},{"start":{"row":485,"column":52},"end":{"row":485,"column":53},"action":"insert","lines":["i"]},{"start":{"row":485,"column":53},"end":{"row":485,"column":54},"action":"insert","lines":["d"]},{"start":{"row":485,"column":54},"end":{"row":485,"column":55},"action":"insert","lines":["n"]}],[{"start":{"row":485,"column":54},"end":{"row":485,"column":55},"action":"remove","lines":["n"],"id":16099},{"start":{"row":485,"column":53},"end":{"row":485,"column":54},"action":"remove","lines":["d"]},{"start":{"row":485,"column":52},"end":{"row":485,"column":53},"action":"remove","lines":["i"]},{"start":{"row":485,"column":51},"end":{"row":485,"column":52},"action":"remove","lines":["r"]},{"start":{"row":485,"column":50},"end":{"row":485,"column":51},"action":"remove","lines":["e"]}],[{"start":{"row":485,"column":50},"end":{"row":485,"column":51},"action":"insert","lines":["r"],"id":16100},{"start":{"row":485,"column":51},"end":{"row":485,"column":52},"action":"insert","lines":["e"]},{"start":{"row":485,"column":52},"end":{"row":485,"column":53},"action":"insert","lines":["d"]},{"start":{"row":485,"column":53},"end":{"row":485,"column":54},"action":"insert","lines":["i"]},{"start":{"row":485,"column":54},"end":{"row":485,"column":55},"action":"insert","lines":["e"]},{"start":{"row":485,"column":55},"end":{"row":485,"column":56},"action":"insert","lines":["n"]},{"start":{"row":485,"column":56},"end":{"row":485,"column":57},"action":"insert","lines":["t"]}],[{"start":{"row":485,"column":57},"end":{"row":485,"column":58},"action":"insert","lines":[","],"id":16101}],[{"start":{"row":485,"column":58},"end":{"row":485,"column":80},"action":"insert","lines":["mongo.db.ingredientsDB"],"id":16102}],[{"start":{"row":493,"column":36},"end":{"row":493,"column":44},"action":"remove","lines":["category"],"id":16103}],[{"start":{"row":493,"column":36},"end":{"row":493,"column":37},"action":"insert","lines":["i"],"id":16104},{"start":{"row":493,"column":37},"end":{"row":493,"column":38},"action":"insert","lines":["t"]},{"start":{"row":493,"column":38},"end":{"row":493,"column":39},"action":"insert","lines":["e"]},{"start":{"row":493,"column":39},"end":{"row":493,"column":40},"action":"insert","lines":["m"]}],[{"start":{"row":493,"column":31},"end":{"row":493,"column":36},"action":"remove","lines":["name,"],"id":16105}],[{"start":{"row":494,"column":12},"end":{"row":494,"column":35},"action":"remove","lines":["=mongo.db.ingredientsDB"],"id":16106},{"start":{"row":494,"column":12},"end":{"row":494,"column":13},"action":"insert","lines":["d"]},{"start":{"row":494,"column":13},"end":{"row":494,"column":14},"action":"insert","lines":["a"]},{"start":{"row":494,"column":14},"end":{"row":494,"column":15},"action":"insert","lines":["t"]},{"start":{"row":494,"column":15},"end":{"row":494,"column":16},"action":"insert","lines":["a"]},{"start":{"row":494,"column":16},"end":{"row":494,"column":17},"action":"insert","lines":["b"]},{"start":{"row":494,"column":17},"end":{"row":494,"column":18},"action":"insert","lines":["a"]},{"start":{"row":494,"column":18},"end":{"row":494,"column":19},"action":"insert","lines":["s"]},{"start":{"row":494,"column":19},"end":{"row":494,"column":20},"action":"insert","lines":["e"]}],[{"start":{"row":494,"column":12},"end":{"row":494,"column":13},"action":"insert","lines":["="],"id":16107}],[{"start":{"row":494,"column":41},"end":{"row":494,"column":51},"action":"remove","lines":["ingredient"],"id":16108},{"start":{"row":494,"column":41},"end":{"row":494,"column":42},"action":"insert","lines":["i"]},{"start":{"row":494,"column":42},"end":{"row":494,"column":43},"action":"insert","lines":["t"]},{"start":{"row":494,"column":43},"end":{"row":494,"column":44},"action":"insert","lines":["e"]},{"start":{"row":494,"column":44},"end":{"row":494,"column":45},"action":"insert","lines":["m"]}],[{"start":{"row":495,"column":11},"end":{"row":495,"column":25},"action":"remove","lines":["ingredient_doc"],"id":16109},{"start":{"row":495,"column":11},"end":{"row":495,"column":12},"action":"insert","lines":["d"]},{"start":{"row":495,"column":12},"end":{"row":495,"column":13},"action":"insert","lines":["o"]},{"start":{"row":495,"column":13},"end":{"row":495,"column":14},"action":"insert","lines":["c"]},{"start":{"row":495,"column":14},"end":{"row":495,"column":15},"action":"insert","lines":["u"]},{"start":{"row":495,"column":15},"end":{"row":495,"column":16},"action":"insert","lines":["m"]},{"start":{"row":495,"column":16},"end":{"row":495,"column":17},"action":"insert","lines":["e"]},{"start":{"row":495,"column":17},"end":{"row":495,"column":18},"action":"insert","lines":["n"]},{"start":{"row":495,"column":18},"end":{"row":495,"column":19},"action":"insert","lines":["t"]}],[{"start":{"row":496,"column":8},"end":{"row":496,"column":30},"action":"remove","lines":["mongo.db.ingredientsDB"],"id":16110},{"start":{"row":496,"column":8},"end":{"row":496,"column":9},"action":"insert","lines":["d"]},{"start":{"row":496,"column":9},"end":{"row":496,"column":10},"action":"insert","lines":["a"]},{"start":{"row":496,"column":10},"end":{"row":496,"column":11},"action":"insert","lines":["t"]},{"start":{"row":496,"column":11},"end":{"row":496,"column":12},"action":"insert","lines":["a"]},{"start":{"row":496,"column":12},"end":{"row":496,"column":13},"action":"insert","lines":["b"]},{"start":{"row":496,"column":13},"end":{"row":496,"column":14},"action":"insert","lines":["a"]},{"start":{"row":496,"column":14},"end":{"row":496,"column":15},"action":"insert","lines":["s"]},{"start":{"row":496,"column":15},"end":{"row":496,"column":16},"action":"insert","lines":["e"]}],[{"start":{"row":496,"column":34},"end":{"row":496,"column":44},"action":"remove","lines":["ingredient"],"id":16111},{"start":{"row":496,"column":34},"end":{"row":496,"column":35},"action":"insert","lines":["i"]},{"start":{"row":496,"column":35},"end":{"row":496,"column":36},"action":"insert","lines":["t"]},{"start":{"row":496,"column":36},"end":{"row":496,"column":37},"action":"insert","lines":["e"]},{"start":{"row":496,"column":37},"end":{"row":496,"column":38},"action":"insert","lines":["m"]}],[{"start":{"row":486,"column":20},"end":{"row":486,"column":21},"action":"insert","lines":["#"],"id":16112}],[{"start":{"row":487,"column":20},"end":{"row":487,"column":21},"action":"insert","lines":["#"],"id":16113}],[{"start":{"row":488,"column":20},"end":{"row":488,"column":21},"action":"insert","lines":["#"],"id":16114}],[{"start":{"row":477,"column":116},"end":{"row":478,"column":0},"action":"insert","lines":["",""],"id":16115},{"start":{"row":478,"column":0},"end":{"row":478,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":478,"column":0},"end":{"row":478,"column":81},"action":"insert","lines":["                    check_and_delete_empty_doc(ingredient,mongo.db.ingredientsDB)"],"id":16116}],[{"start":{"row":478,"column":16},"end":{"row":478,"column":20},"action":"remove","lines":["    "],"id":16117},{"start":{"row":478,"column":12},"end":{"row":478,"column":16},"action":"remove","lines":["    "]}],[{"start":{"row":479,"column":12},"end":{"row":479,"column":13},"action":"insert","lines":["#"],"id":16118}],[{"start":{"row":480,"column":12},"end":{"row":480,"column":13},"action":"insert","lines":["#"],"id":16119}],[{"start":{"row":478,"column":50},"end":{"row":478,"column":72},"action":"remove","lines":["mongo.db.ingredientsDB"],"id":16120},{"start":{"row":478,"column":50},"end":{"row":478,"column":67},"action":"insert","lines":["mongo.db.authorDB"]}],[{"start":{"row":478,"column":39},"end":{"row":478,"column":49},"action":"remove","lines":["ingredient"],"id":16121},{"start":{"row":478,"column":39},"end":{"row":478,"column":40},"action":"insert","lines":["a"]}],[{"start":{"row":478,"column":39},"end":{"row":478,"column":40},"action":"remove","lines":["a"],"id":16122}],[{"start":{"row":478,"column":39},"end":{"row":478,"column":58},"action":"insert","lines":["recipe[key].lower()"],"id":16123}],[{"start":{"row":470,"column":119},"end":{"row":470,"column":130},"action":"remove","lines":["           "],"id":16124},{"start":{"row":470,"column":119},"end":{"row":471,"column":0},"action":"insert","lines":["",""]},{"start":{"row":471,"column":0},"end":{"row":471,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":471,"column":12},"end":{"row":471,"column":78},"action":"insert","lines":["check_and_delete_empty_doc(recipe[key].lower(),mongo.db.authorDB) "],"id":16125}],[{"start":{"row":472,"column":12},"end":{"row":472,"column":13},"action":"insert","lines":["#"],"id":16126}],[{"start":{"row":473,"column":12},"end":{"row":473,"column":13},"action":"insert","lines":["#"],"id":16127}],[{"start":{"row":474,"column":12},"end":{"row":474,"column":13},"action":"insert","lines":["#"],"id":16128}],[{"start":{"row":471,"column":59},"end":{"row":471,"column":76},"action":"remove","lines":["mongo.db.authorDB"],"id":16129},{"start":{"row":471,"column":59},"end":{"row":471,"column":79},"action":"insert","lines":["mongo.db.countriesDB"]}],[{"start":{"row":492,"column":4},"end":{"row":492,"column":5},"action":"remove","lines":["#"],"id":16130}],[{"start":{"row":499,"column":0},"end":{"row":499,"column":4},"action":"remove","lines":["    "],"id":16131},{"start":{"row":499,"column":0},"end":{"row":499,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":499,"column":4},"end":{"row":500,"column":0},"action":"remove","lines":["",""],"id":16132}],[{"start":{"row":108,"column":0},"end":{"row":108,"column":51},"action":"remove","lines":["#                        new_recipe[key]=favourites"],"id":16133}],[{"start":{"row":107,"column":67},"end":{"row":108,"column":0},"action":"remove","lines":["",""],"id":16134}],[{"start":{"row":101,"column":0},"end":{"row":102,"column":0},"action":"remove","lines":["#                            new_recipe[key]=favourites",""],"id":16135}],[{"start":{"row":543,"column":0},"end":{"row":543,"column":38},"action":"remove","lines":["        print(\"recipe_ids\",recipe_ids)"],"id":16136},{"start":{"row":542,"column":47},"end":{"row":543,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":538,"column":0},"end":{"row":538,"column":45},"action":"remove","lines":["        print(\"recipe_objets\",recipe_objects)"],"id":16137},{"start":{"row":537,"column":72},"end":{"row":538,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":517,"column":4},"end":{"row":517,"column":5},"action":"insert","lines":["#"],"id":16138}],[{"start":{"row":543,"column":0},"end":{"row":543,"column":4},"action":"insert","lines":["    "],"id":16139}],[{"start":{"row":543,"column":4},"end":{"row":543,"column":8},"action":"insert","lines":["    "],"id":16140}],[{"start":{"row":543,"column":8},"end":{"row":543,"column":42},"action":"insert","lines":["recipes_in_category[_item_list[i]]"],"id":16141}],[{"start":{"row":543,"column":42},"end":{"row":543,"column":44},"action":"insert","lines":["[]"],"id":16142}],[{"start":{"row":543,"column":43},"end":{"row":543,"column":45},"action":"insert","lines":["\"\""],"id":16143}],[{"start":{"row":543,"column":44},"end":{"row":543,"column":45},"action":"insert","lines":["c"],"id":16144},{"start":{"row":543,"column":45},"end":{"row":543,"column":46},"action":"insert","lines":["o"]},{"start":{"row":543,"column":46},"end":{"row":543,"column":47},"action":"insert","lines":["u"]},{"start":{"row":543,"column":47},"end":{"row":543,"column":48},"action":"insert","lines":["n"]},{"start":{"row":543,"column":48},"end":{"row":543,"column":49},"action":"insert","lines":["t"]}],[{"start":{"row":543,"column":51},"end":{"row":543,"column":52},"action":"insert","lines":["="],"id":16145}],[{"start":{"row":543,"column":52},"end":{"row":543,"column":53},"action":"insert","lines":["r"],"id":16146},{"start":{"row":543,"column":53},"end":{"row":543,"column":54},"action":"insert","lines":["e"]},{"start":{"row":543,"column":54},"end":{"row":543,"column":55},"action":"insert","lines":["c"]},{"start":{"row":543,"column":55},"end":{"row":543,"column":56},"action":"insert","lines":["i"]},{"start":{"row":543,"column":56},"end":{"row":543,"column":57},"action":"insert","lines":["p"]},{"start":{"row":543,"column":57},"end":{"row":543,"column":58},"action":"insert","lines":["e"]}],[{"start":{"row":543,"column":52},"end":{"row":543,"column":53},"action":"insert","lines":["l"],"id":16147},{"start":{"row":543,"column":53},"end":{"row":543,"column":54},"action":"insert","lines":["e"]},{"start":{"row":543,"column":54},"end":{"row":543,"column":55},"action":"insert","lines":["n"]},{"start":{"row":543,"column":55},"end":{"row":543,"column":56},"action":"insert","lines":["("]}],[{"start":{"row":543,"column":62},"end":{"row":543,"column":63},"action":"insert","lines":["_"],"id":16148},{"start":{"row":543,"column":63},"end":{"row":543,"column":64},"action":"insert","lines":["i"]},{"start":{"row":543,"column":64},"end":{"row":543,"column":65},"action":"insert","lines":["d"]},{"start":{"row":543,"column":65},"end":{"row":543,"column":66},"action":"insert","lines":["s"]},{"start":{"row":543,"column":66},"end":{"row":543,"column":67},"action":"insert","lines":[")"]}],[{"start":{"row":543,"column":67},"end":{"row":544,"column":0},"action":"insert","lines":["",""],"id":16149},{"start":{"row":544,"column":0},"end":{"row":544,"column":8},"action":"insert","lines":["        "]},{"start":{"row":544,"column":8},"end":{"row":544,"column":9},"action":"insert","lines":["p"]},{"start":{"row":544,"column":9},"end":{"row":544,"column":10},"action":"insert","lines":["r"]},{"start":{"row":544,"column":10},"end":{"row":544,"column":11},"action":"insert","lines":["i"]},{"start":{"row":544,"column":11},"end":{"row":544,"column":12},"action":"insert","lines":["n"]},{"start":{"row":544,"column":12},"end":{"row":544,"column":13},"action":"insert","lines":["t"]}],[{"start":{"row":544,"column":13},"end":{"row":544,"column":15},"action":"insert","lines":["()"],"id":16150}],[{"start":{"row":544,"column":14},"end":{"row":544,"column":16},"action":"insert","lines":["\"\""],"id":16151}],[{"start":{"row":544,"column":15},"end":{"row":544,"column":16},"action":"insert","lines":["c"],"id":16152},{"start":{"row":544,"column":16},"end":{"row":544,"column":17},"action":"insert","lines":["o"]},{"start":{"row":544,"column":17},"end":{"row":544,"column":18},"action":"insert","lines":["u"]},{"start":{"row":544,"column":18},"end":{"row":544,"column":19},"action":"insert","lines":["n"]},{"start":{"row":544,"column":19},"end":{"row":544,"column":20},"action":"insert","lines":["t"]},{"start":{"row":544,"column":20},"end":{"row":544,"column":21},"action":"insert","lines":["="]}],[{"start":{"row":544,"column":22},"end":{"row":544,"column":23},"action":"insert","lines":[","],"id":16153}],[{"start":{"row":544,"column":23},"end":{"row":544,"column":66},"action":"insert","lines":["recipes_in_category[_item_list[i]][\"count\"]"],"id":16154}],[{"start":{"row":544,"column":57},"end":{"row":544,"column":66},"action":"remove","lines":["[\"count\"]"],"id":16155}],[{"start":{"row":543,"column":8},"end":{"row":543,"column":9},"action":"insert","lines":["#"],"id":16156}],[{"start":{"row":542,"column":43},"end":{"row":542,"column":44},"action":"insert","lines":["{"],"id":16157}],[{"start":{"row":542,"column":44},"end":{"row":542,"column":57},"action":"insert","lines":["_item_list[i]"],"id":16158}],[{"start":{"row":542,"column":57},"end":{"row":542,"column":58},"action":"insert","lines":[":"],"id":16159}],[{"start":{"row":542,"column":126},"end":{"row":542,"column":127},"action":"insert","lines":["}"],"id":16160}],[{"start":{"row":543,"column":8},"end":{"row":543,"column":9},"action":"remove","lines":["#"],"id":16161}],[{"start":{"row":543,"column":42},"end":{"row":543,"column":43},"action":"insert","lines":["."],"id":16162},{"start":{"row":543,"column":43},"end":{"row":543,"column":44},"action":"insert","lines":["/"]}],[{"start":{"row":543,"column":43},"end":{"row":543,"column":44},"action":"remove","lines":["/"],"id":16163}],[{"start":{"row":543,"column":43},"end":{"row":543,"column":44},"action":"insert","lines":["u"],"id":16164},{"start":{"row":543,"column":44},"end":{"row":543,"column":45},"action":"insert","lines":["p"]},{"start":{"row":543,"column":45},"end":{"row":543,"column":46},"action":"insert","lines":["d"]},{"start":{"row":543,"column":46},"end":{"row":543,"column":47},"action":"insert","lines":["a"]},{"start":{"row":543,"column":47},"end":{"row":543,"column":48},"action":"insert","lines":["t"]},{"start":{"row":543,"column":48},"end":{"row":543,"column":49},"action":"insert","lines":["e"]},{"start":{"row":543,"column":49},"end":{"row":543,"column":50},"action":"insert","lines":["("]}],[{"start":{"row":543,"column":50},"end":{"row":543,"column":51},"action":"remove","lines":["["],"id":16165}],[{"start":{"row":543,"column":57},"end":{"row":543,"column":58},"action":"remove","lines":["]"],"id":16166}],[{"start":{"row":543,"column":57},"end":{"row":543,"column":58},"action":"remove","lines":["="],"id":16167}],[{"start":{"row":543,"column":57},"end":{"row":543,"column":58},"action":"insert","lines":[":"],"id":16168}],[{"start":{"row":543,"column":73},"end":{"row":543,"column":74},"action":"insert","lines":[")"],"id":16169}],[{"start":{"row":543,"column":50},"end":{"row":543,"column":51},"action":"insert","lines":["{"],"id":16170}],[{"start":{"row":543,"column":74},"end":{"row":543,"column":75},"action":"insert","lines":["}"],"id":16171}],[{"start":{"row":542,"column":44},"end":{"row":542,"column":56},"action":"remove","lines":["_item_list[i"],"id":16172},{"start":{"row":542,"column":44},"end":{"row":542,"column":45},"action":"insert","lines":["\""]},{"start":{"row":542,"column":45},"end":{"row":542,"column":46},"action":"insert","lines":["r"]},{"start":{"row":542,"column":46},"end":{"row":542,"column":47},"action":"insert","lines":["e"]},{"start":{"row":542,"column":47},"end":{"row":542,"column":48},"action":"insert","lines":["c"]},{"start":{"row":542,"column":48},"end":{"row":542,"column":49},"action":"insert","lines":["i"]},{"start":{"row":542,"column":49},"end":{"row":542,"column":50},"action":"insert","lines":["p"]},{"start":{"row":542,"column":50},"end":{"row":542,"column":51},"action":"insert","lines":["e"]},{"start":{"row":542,"column":51},"end":{"row":542,"column":52},"action":"insert","lines":["\""]}],[{"start":{"row":542,"column":52},"end":{"row":542,"column":53},"action":"remove","lines":["]"],"id":16173}],[{"start":{"row":469,"column":81},"end":{"row":470,"column":86},"action":"remove","lines":["","            #country_doc=mongo.db.countriesDB.find_one({\"name\" : recipe[key].lower()})"],"id":16174}]]},"ace":{"folds":[{"start":{"row":15,"column":17},"end":{"row":28,"column":37},"placeholder":"..."},{"start":{"row":36,"column":17},"end":{"row":61,"column":147},"placeholder":"..."},{"start":{"row":64,"column":19},"end":{"row":256,"column":83},"placeholder":"..."},{"start":{"row":259,"column":13},"end":{"row":280,"column":105},"placeholder":"..."},{"start":{"row":283,"column":18},"end":{"row":402,"column":304},"placeholder":"..."},{"start":{"row":405,"column":27},"end":{"row":419,"column":102},"placeholder":"..."},{"start":{"row":422,"column":27},"end":{"row":448,"column":169},"placeholder":"..."},{"start":{"row":451,"column":20},"end":{"row":490,"column":60},"placeholder":"..."},{"start":{"row":492,"column":46},"end":{"row":495,"column":62},"placeholder":"..."},{"start":{"row":498,"column":21},"end":{"row":503,"column":34},"placeholder":"..."},{"start":{"row":506,"column":25},"end":{"row":545,"column":141},"placeholder":"..."}],"scrolltop":180,"scrollleft":0,"selection":{"start":{"row":469,"column":81},"end":{"row":469,"column":81},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":39,"state":"start","mode":"ace/mode/python"}},"timestamp":1564876342985}